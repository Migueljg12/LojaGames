{"version":3,"sources":["./src/app/home/novo-usuario/novo-usuario.service.ts","./src/app/home/novo-usuario/usuario-existe.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home-routing.module.ts","./src/app/home/login/login.component.ts","./src/app/home/login/login.component.html","./src/app/home/novo-usuario/minusculo.validator.ts","./src/app/home/novo-usuario/novo-usuario.component.ts","./src/app/home/novo-usuario/novo-usuario.component.html","./src/app/home/novo-usuario/usuario-senha-iguais.validator.ts","./src/app/home/home.module.ts","./src/app/autenticacao/autenticacao.service.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { NovoUsuario } from './novo-usuario';\n\nconst API = environment.apiURL\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NovoUsuarioService {\n\n  constructor(private http: HttpClient) { }\n\n  cadastroNovoUsuario(novoUsuario: NovoUsuario){\n    return this.http.post(`${API}/api/user/create`, novoUsuario)\n  }\n\n  verificarCpfExiste(novoUsuario: string){\n    return this.http.get(`${API}/api/user/exist?cpf=${novoUsuario}`)\n  }\n\n  verificarEmailExiste(novoUsuario: string){\n    return this.http.get(`${API}/api/user/exist?email=${novoUsuario}`)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { NovoUsuarioService } from './novo-usuario.service';\nimport { first, map, switchMap } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioExisteService {\n\n  constructor(private novoUsuarioService: NovoUsuarioService) { }\n\n  emailJaExiste() {\n    return (control: AbstractControl) => {\n      return control.valueChanges.pipe(\n        switchMap(nomeUsuario => {\n          return this.novoUsuarioService.verificarEmailExiste(nomeUsuario)}\n        ),\n        map(usuarioExiste => {\n          console.log(usuarioExiste)\n         return usuarioExiste ? { usuarioExistente: true } : null}),\n         first()\n      )\n    }\n  }\n\n  cpfJaExiste() {\n    return (control: AbstractControl) => {\n      return control.valueChanges.pipe(\n        switchMap(nomeUsuario => {\n          return this.novoUsuarioService.verificarCpfExiste(nomeUsuario)}\n        ),\n        map(usuarioExiste => {\n          console.log(usuarioExiste)\n         return usuarioExiste ? { usuarioExistente: true } : null}),\n         first()\n      )\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"body\">\n  <div class=\"row\">\n    <div class=\"col-md-6 mb-2\">\n      <img\n        class=\"img-fluid d-none d-sm-block\"\n        src=\"assets/img/logo_geracao_games.png\"\n        alt=\"imagem do mario no seu carrinho com a logo loja de games\"\n      />\n    </div>\n    <div class=\"col-md-6\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\nimport { LoginComponent } from './login/login.component';\nimport { NovoUsuarioComponent } from './novo-usuario/novo-usuario.component';\n\nconst routes: Routes = [\n{\n  path:'',\n  component: HomeComponent,\n  children:[\n    {\n      path:'',\n      component:LoginComponent,\n    },\n    {\n      path:'novousuario',\n      component:NovoUsuarioComponent\n    }\n  ],\n},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AutenticacaoService } from 'src/app/autenticacao/autenticacao.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email = ''\n  senha = ''\n  constructor(\n    private auth: AutenticacaoService,\n    private router: Router\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    this.auth.autenticar(this.email, this.senha).subscribe(()=>{\n      this.router.navigate(['jogos'])\n    }, error => {\n      alert('Usuario ou senha inválido')\n      console.log(error)})\n  }\n\n}\n","<h4 class=\"text-center text-danger\">Login</h4>\n\n<form class=\"form mt-4\" (ngSubmit)=\"login()\" #loginForm=\"ngForm\">\n  <div class=\"form-group\">\n    <input\n      class=\"form-control\"\n      placeholder=\"Email do usuário\"\n      [(ngModel)]=\"email\"\n      name=\"email\"\n      #campoEmail=\"ngModel\"\n      required\n    />\n\n    <app-mensagem\n      *ngIf=\"campoEmail.invalid && campoEmail.touched\"\n      mensagem=\"Email obrigatório!\"\n    ></app-mensagem>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"password\"\n      class=\"form-control\"\n      placeholder=\"Senha\"\n      [(ngModel)]=\"senha\"\n      name=\"senha\"\n      #campoSenha=\"ngModel\"\n      required\n    />\n    <app-mensagem\n      *ngIf=\"campoSenha.invalid && campoSenha.touched\"\n      mensagem=\"Senha obrigatória!\"\n    ></app-mensagem>\n  </div>\n\n  <button\n    type=\"submit\"\n    class=\"btn btn-danger btn-block\"\n    [disabled]=\"loginForm.invalid\"\n  >\n    Login\n  </button>\n</form>\n\n<p>Não é um usuário?<a [routerLink]=\"['novousuario']\"> Se cadastre!</a></p>\n","import { AbstractControl } from \"@angular/forms\";\n\nexport function minusculoValidator(control: AbstractControl){\n  const valor = control.value as string\n  if(valor !== valor.toLocaleLowerCase()){\n    return { minusculo: true}\n  }else{\n    return null\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { minusculoValidator } from './minusculo.validator';\nimport { NovoUsuario } from './novo-usuario';\nimport { NovoUsuarioService } from './novo-usuario.service';\nimport { UsuarioExisteService } from './usuario-existe.service';\nimport { usuarioSenhaIguaisValidator } from './usuario-senha-iguais.validator';\n\n@Component({\n  selector: 'app-novo-usuario',\n  templateUrl: './novo-usuario.component.html',\n  styleUrls: ['./novo-usuario.component.css'],\n})\nexport class NovoUsuarioComponent implements OnInit {\n  novoUsuarioForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private novoUserService: NovoUsuarioService,\n    private usuarioExistenteService: UsuarioExisteService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.novoUsuarioForm = this.formBuilder.group(\n      {\n        name: [\n          '',\n          [Validators.required, Validators.minLength(4), minusculoValidator],\n        ],\n        cpf: [\n          '',\n          [\n            Validators.minLength(11),\n            Validators.maxLength(11),\n            Validators.required,\n          ],\n          this.usuarioExistenteService.cpfJaExiste(),\n        ],\n        email: [\n          '',\n          [Validators.required, Validators.email],\n          this.usuarioExistenteService.emailJaExiste(),\n        ],\n        password: [''],\n      },\n      {\n        validators: [usuarioSenhaIguaisValidator],\n      }\n    );\n  }\n\n  cadastrar() {\n    if (this.novoUsuarioForm.valid) {\n      const novoUsuario = this.novoUsuarioForm.getRawValue() as NovoUsuario;\n      this.novoUserService.cadastroNovoUsuario(novoUsuario).subscribe(\n        () => {\n          this.router.navigate(['']);\n        },\n        (error) => console.log(error)\n      );\n    }\n  }\n}\n","<div class=\"body\">\n  <h4 class=\"text-center text-danger\">Cadastre-se e compre nossos jogos!</h4>\n\n  <form [formGroup]=\"novoUsuarioForm\" (submit)=\"cadastrar()\">\n    <div class=\"form-group\">\n      <input placeholder=\"email\" class=\"form-control\" formControlName=\"email\" />\n      <app-mensagem\n        *ngIf=\"\n          novoUsuarioForm.get('email')?.errors?.required &&\n          novoUsuarioForm.get('email')?.touched\n        \"\n        mensagem=\"Email obrigatório\"\n      ></app-mensagem>\n      <app-mensagem\n        *ngIf=\"\n          novoUsuarioForm.get('email')?.errors?.email &&\n          novoUsuarioForm.get('email')?.touched\n        \"\n        mensagem=\"Email no formato incorreto.\"\n      ></app-mensagem>\n      <app-mensagem\n        *ngIf=\"novoUsuarioForm.get('email')?.errors?.usuarioExistente\"\n        mensagem=\"Email já existe\"\n      ></app-mensagem>\n    </div>\n    <div class=\"form-group\">\n      <input placeholder=\"Nome\" class=\"form-control\" formControlName=\"name\" />\n      <app-mensagem\n        *ngIf=\"\n          novoUsuarioForm.get('name')?.errors &&\n          novoUsuarioForm.get('name')?.touched\n        \"\n        mensagem=\"Nome Incorreto.\"\n      ></app-mensagem>\n      <app-mensagem\n        *ngIf=\"\n          novoUsuarioForm.get('name')?.errors?.minusculo &&\n          novoUsuarioForm.get('name')?.touched\n        \"\n        mensagem=\"Nome deve ser minusculo!\"\n      ></app-mensagem>\n    </div>\n    <div class=\"form-group\">\n      <input placeholder=\"CPF\" class=\"form-control\" formControlName=\"cpf\" />\n      <app-mensagem\n        *ngIf=\"\n          novoUsuarioForm.get('cpf')?.errors &&\n          novoUsuarioForm.get('cpf')?.touched\n        \"\n        mensagem=\"Cpf deve conter 11 digitos.\"\n      ></app-mensagem>\n      <app-mensagem\n        *ngIf=\"\n          novoUsuarioForm.get('cpf')?.errors?.required &&\n          novoUsuarioForm.get('cpf')?.touched\n        \"\n        mensagem=\"CPF obrigatório\"\n      >\n      </app-mensagem>\n      <app-mensagem\n        *ngIf=\"novoUsuarioForm.get('cpf')?.errors?.usuarioExistente\"\n        mensagem=\"CPF já existe\"\n      ></app-mensagem>\n    </div>\n    <div class=\"form-group\">\n      <input\n        placeholder=\"Senha\"\n        type=\"password\"\n        class=\"form-control\"\n        formControlName=\"password\"\n      />\n      <app-mensagem\n        *ngIf=\"novoUsuarioForm.errors?.senhaIgualUsuario\"\n        mensagem=\"Senha não pode ser igual ao nome\"\n      ></app-mensagem>\n    </div>\n\n    <button class=\"btn btn-danger btn-block\">Cadastro</button>\n  </form>\n\n  <p class=\"text-light\">\n    Já é um usuário? <a [routerLink]=\"['']\"> Faça login!</a>\n  </p>\n</div>\n","import { FormGroup } from \"@angular/forms\";\n\nexport function usuarioSenhaIguaisValidator( formGroup: FormGroup){\n  const username = formGroup.get('name')?.value ?? ''\n  const password = formGroup.get('password')?.value ?? ''\n\n  if (username.trim()+ password.trim()) {\n    return username !== password ? null : { senhaIgualUsuario: true }\n  } else {\n    return null\n  }\n}\n","import { SharedModule } from './../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MensagemModule } from '../componentes/mensagem/mensagem.module';\nimport { NovoUsuarioComponent } from './novo-usuario/novo-usuario.component';\n\n@NgModule({\n  declarations: [HomeComponent, LoginComponent, NovoUsuarioComponent],\n  imports: [CommonModule, HomeRoutingModule, FormsModule, SharedModule],\n  exports: [HomeComponent],\n})\nexport class HomeModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UsuarioService } from './usuario/usuario.service';\nimport { tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nconst API = environment.apiURL;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AutenticacaoService {\n  constructor(\n    private http: HttpClient,\n    private usuarioService: UsuarioService\n  ) {}\n\n  autenticar(email: string, senha: string): Observable<HttpResponse<any>> {\n    console.log(API);\n    return this.http\n      .post(\n        `${API}/api/auth/signin`,\n        {\n          email: email,\n          password: senha,\n        },\n        { observe: 'response' }\n      )\n      .pipe(\n        tap((res) => {\n          const authtoken: any = res.body ?? '';\n          this.usuarioService.salvaToken(authtoken);\n        })\n      );\n  }\n}\n"],"sourceRoot":"webpack:///"}